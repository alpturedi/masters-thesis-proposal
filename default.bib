@inproceedings{aljedaani_does_2024,
	address = {New York, NY, USA},
	series = {{W4A} '24},
	title = {Does {ChatGPT} {Generate} {Accessible} {Code}? {Investigating} {Accessibility} {Challenges} in {LLM}-{Generated} {Source} {Code}},
	isbn = {979-8-4007-1030-8},
	shorttitle = {Does {ChatGPT} {Generate} {Accessible} {Code}?},
	url = {https://dl.acm.org/doi/10.1145/3677846.3677854},
	doi = {10.1145/3677846.3677854},
	abstract = {Context. Large Language Models (LLMs) such as GPT-3.5 show great promise in generating source code based on natural language descriptions, which could significantly facilitate web development. However, the level of accessibility in generated code by these models is still unexplored.Objective. We empirically evaluate the accessibility of the web code produced by ChatGPT and its ability to fix accessibility violations in two contexts: its own generated code and open-source web code extracted from GitHub.Method. A total of 88 web developers used natural language descriptions to prompt ChatGPT to create websites with diverse characteristics and web elements. Such websites were assessed by two well-known accessibility checker tools, and ChatGPT was prompted to fix the accessibility violations found. Finally, the model was used to address accessibility violations in different open-source projects from GitHub.Result. The majority of websites (84\%) generated by ChatGPT exhibited many accessibility problems. While the model demonstrates strength in adhering to certain accessibility guidelines, it struggles with specific aspects related to established accessibility principles. ChatGPT achieved a 70\% success rate in rectifying the accessibility violations within its generated source code and a 73\% success rate in fixing accessibility issues within third-party open-source project code. These findings can help developers to understand potential areas requiring intervention to ensure website inclusivity.},
	urldate = {2025-04-23},
	booktitle = {Proceedings of the 21st {International} {Web} for {All} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Aljedaani, Wajdi and Habib, Abdulrahman and Aljohani, Ahmed and Eler, Marcelo and Feng, Yunhe},
	month = oct,
	year = {2024},
	pages = {165--176},
	file = {Full Text PDF:C\:\\Users\\alptu\\Zotero\\storage\\YHMZTXCG\\Aljedaani et al. - 2024 - Does ChatGPT Generate Accessible Code Investigating Accessibility Challenges in LLM-Generated Sourc.pdf:application/pdf},
}

@inproceedings{othman_fostering_2023,
	address = {New York, NY, USA},
	series = {{PETRA} '23},
	title = {Fostering websites accessibility: {A} case study on the use of the {Large} {Language} {Models} {ChatGPT} for automatic remediation},
	isbn = {979-8-4007-0069-9},
	shorttitle = {Fostering websites accessibility},
	url = {https://dl.acm.org/doi/10.1145/3594806.3596542},
	doi = {10.1145/3594806.3596542},
	abstract = {The use of automated accessibility testing tools remains a common practice for evaluating web accessibility. However, the results obtained from these tools may not always provide a comprehensive and complete view of a site's accessibility status. The main purpose of this study is to improve web accessibility by automatically remediating non-accessible ones using Large Language Models (LLM), particularly ChatGPT. The effectiveness of the used model in detecting and remediating accessibility issues to ensure compliance with the Web Content Accessibility Guidelines (WCAG 2.1) is also discussed. By using ChatGPT as a remediation tool, this study investigates the potential of LLM in improving web accessibility. In the case study, two websites that did not adhere to the WCAG 2.1 guidelines were selected as the primary experimental subjects for the study. These websites were assessed using the web accessibility evaluation tool, WAVE, to detect accessibility issues. The identified issues served then as the basis for remediation using ChatGPT. The effectiveness of the used advanced language model as a web accessibility remediation tool was evaluated by comparing its findings with those obtained from manual accessibility testing. The results of this comparison have significant implications for stakeholders involved in achieving WCAG compliance and contribute to the development of more accessible online platforms for individuals with disabilities.},
	urldate = {2025-04-23},
	booktitle = {Proceedings of the 16th {International} {Conference} on {PErvasive} {Technologies} {Related} to {Assistive} {Environments}},
	publisher = {Association for Computing Machinery},
	author = {Othman, Achraf and Dhouib, Amira and Nasser Al Jabor, Aljazi},
	month = aug,
	year = {2023},
	pages = {707--713},
	file = {Full Text PDF:C\:\\Users\\alptu\\Zotero\\storage\\3KENEZQF\\Othman et al. - 2023 - Fostering websites accessibility A case study on the use of the Large Language Models ChatGPT for a.pdf:application/pdf},
}

@article{lopez-gil_turning_2025,
	title = {Turning manual web accessibility success criteria into automatic: an {LLM}-based approach},
	volume = {24},
	copyright = {2024 The Author(s)},
	issn = {1615-5297},
	shorttitle = {Turning manual web accessibility success criteria into automatic},
	url = {https://link.springer.com/article/10.1007/s10209-024-01108-z},
	doi = {10.1007/s10209-024-01108-z},
	abstract = {Web accessibility evaluation is a costly process that usually requires manual intervention. Currently, large language model (LLM) based systems have gained popularity and shown promising capabilities to perform tasks that seemed impossible or required programming knowledge specific to a given area or were supposed to be impossible to be performed automatically. Our research explores whether an LLM-based system would be able to evaluate web accessibility success criteria that require manual evaluation. Three specific success criteria of the Web Content Accessibility Guidelines (WCAG) that currently require manual checks were tested: 1.1.1 Non-text Content, 2.4.4 Link Purpose (In Context), and 3.1.2 Language of Parts. LLM-based scripts were developed to evaluate the test cases. Results were compared against current web accessibility evaluators. While automated accessibility evaluators were unable to reliably test the three WCAG criteria, often missing or only warning about issues, the LLM-based scripts successfully identified accessibility issues the tools missed, achieving overall 87.18\% detection across the test cases. Conclusion The results demonstrate LLMs can augment automated accessibility testing to catch issues that pure software testing misses today. Further research should expand evaluation across more test cases and types of content.},
	language = {en},
	number = {1},
	urldate = {2025-04-24},
	journal = {Universal Access in the Information Society},
	author = {López-Gil, Juan-Miguel and Pereira, Juanan},
	month = mar,
	year = {2025},
	note = {Company: Springer
Distributor: Springer
Institution: Springer
Label: Springer
Number: 1
Publisher: Springer Berlin Heidelberg},
	pages = {837--852},
	file = {Full Text PDF:C\:\\Users\\alptu\\Zotero\\storage\\BA494AQ8\\López-Gil and Pereira - 2025 - Turning manual web accessibility success criteria into automatic an LLM-based approach.pdf:application/pdf},
}

@article{vigo_automatic_2011,
	title = {Automatic web accessibility metrics: {Where} we are and where we can go},
	volume = {23},
	issn = {0953-5438},
	shorttitle = {Automatic web accessibility metrics},
	url = {https://doi.org/10.1016/j.intcom.2011.01.001},
	doi = {10.1016/j.intcom.2011.01.001},
	abstract = {The fact that several web accessibility metrics exist may be evidence of a lack of a comparison framework that highlights how well they work and for what purposes they are appropriate. In this paper we aim at formulating such a framework, demonstrating that it is feasible, and showing the findings we obtained when we applied it to seven existing automatic accessibility metrics. The framework encompasses validity, reliability, sensitivity, adequacy and complexity of metrics in the context of four scenarios where the metrics can be used. The experimental demonstration of the viability of the framework is based on applying seven published metrics to more than 1500 web pages and then operationalizing the notions of validity-as-conformance, adequacy and complexity. Our findings lead us to conclude that the Web Accessibility Quantitative Metric, Page Measure and Web Accessibility Barrier are the metrics that achieve the highest levels of quality (out of the seven that we examined). Finally, since we did not analyse reliability, sensitivity and validity-in-use, this paper provides guidance to address them in what are new research avenues.},
	number = {2},
	urldate = {2025-04-24},
	journal = {Interacting with Computers},
	author = {Vigo, Markel and Brajnik, Giorgio},
	month = mar,
	year = {2011},
	pages = {137--155},
	file = {Full Text PDF:C\:\\Users\\alptu\\Zotero\\storage\\E35FQQYP\\Vigo and Brajnik - 2011 - Automatic web accessibility metrics Where we are and where we can go.pdf:application/pdf;Snapshot:C\:\\Users\\alptu\\Zotero\\storage\\RGXIIC3Y\\747384.html:text/html},
}

@article{ara_inclusive_2024,
	title = {An inclusive framework for automated web content accessibility evaluation},
	copyright = {2024 The Author(s)},
	issn = {1615-5297},
        year={2024},
	url = {https://link.springer.com/article/10.1007/s10209-024-01164-5},
	doi = {10.1007/s10209-024-01164-5},
	abstract = {Since 1996, web accessibility evaluation has been an important aspect of web development to increase social inclusion for people with special needs. Several web accessibility evaluation and testing tools have been developed to automatically evaluate websites in order to identify barriers for people with disabilities. The developed tools are significant since their aim is to effectively represent accessibility issues. However, a few issues with website accessibility cannot be identified through the existing accessibility testing tools due to several limitations, including (i) inappropriate guideline selection, (ii) ambiguities in guideline understanding, (iii) avoiding user and expert suggestions as evaluation criteria, (iv) limited consideration of semantic perspectives, and (iv) unwillingness to incorporate the updated engineering methods. Therefore, reported results may be unclear and inappropriate for some users. Such limitations are critical factors that reduce the effectiveness of the developed tools. These issues cause unwillingness to use a particular tool or possible adoption of other tools. In this situation, we must identify which aspects are important to incorporate in the development in order to make the developed solution more effective as it allows users to make their website accessible to people with disabilities. In this paper, first, we present a literature review of different existing solutions for web accessibility testing to identify their challenges and limitations. Following the reported findings, we propose an automated web accessibility evaluation framework addressing several accessibility aspects to improve the evaluation results by mitigating the limitations of existing solutions. The proposed framework is validated by comparing it with existing automated solutions considering their functional properties. The proposed accessibility framework might be beneficial for web developers, accessibility engineers, and other practitioners to incorporate into their development and research.},
	language = {en},
	urldate = {2025-04-24},
	journal = {Universal Access in the Information Society},
	author = {Ara, Jinat and Sik-Lanyi, Cecilia and Kelemen, Arpad and Guzsvinecz, Tibor},
	month = oct,
	year = {2024},
	note = {Company: Springer
Distributor: Springer
Institution: Springer
Label: Springer
Publisher: Springer Berlin Heidelberg},
	pages = {1--27},
	file = {Full Text PDF:C\:\\Users\\alptu\\Zotero\\storage\\ZV49XM32\\Ara et al. - 2024 - An inclusive framework for automated web content accessibility evaluation.pdf:application/pdf},
}

@article{iannuzzi_combined_2025,
	title = {Combined accessibility validation and monitoring of web sites and {PDF} documents},
	copyright = {2025 The Author(s)},
	issn = {1615-5297},
	url = {https://link.springer.com/article/10.1007/s10209-025-01194-7},
	doi = {10.1007/s10209-025-01194-7},
	abstract = {Accessibility validation of online digital content through automatic tools has been addressed in limited terms. There is a need for a holistic approach to accessibility validation, able to align well with the goals of public organisations and accessibility authorities. In this perspective, one main issue is that usually such tools aim to assess either the web content, or the PDF documents, but not both. However, users need that all the content be accessible, regardless of the format used, thus it would be helpful to have tools able to perform a combined analysis of both web pages, and PDF files connected with such pages. This combined approach to accessibility validation, beyond providing a more complete and coherent view on the accessibility supported for everyone, would also be important for accessibility authorities (who must monitor the state of accessibility on a large scale, e.g., to comply with the EU WAD Directive), as well as for public organisations (since they could incur in legal risks and potential lawsuits, if only web pages are compliant). Indeed, a combined accessibility analysis would help them to identify the sites that need more interventions and would also be useful more generally to stimulate web developers and content providers to pay attention to both aspects. In this paper, we present how a tool that originally supported Web accessibility validation only, has been extended to include in the supported accessibility analysis also PDF files, to provide a more comprehensive assessment of the evaluated content. We describe the tasks it supports, the possible use cases, as well as some results obtained in a large-scale combined validation (Web and PDF content), carried out on Italian public service websites. The paper also reports the results of a user study carried out to understand the usability of the features that were added to the tool to support the validation of the accessibility of both web and PDF content.},
	language = {en},
	urldate = {2025-04-24},
	journal = {Universal Access in the Information Society},
	author = {Iannuzzi, Nicola and Manca, Marco and Paternò, Fabio and Santoro, Carmen},
	month = feb,
	year = {2025},
	note = {Company: Springer
Distributor: Springer
Institution: Springer
Label: Springer
Publisher: Springer Berlin Heidelberg},
	pages = {1--20},
	file = {Full Text PDF:C\:\\Users\\alptu\\Zotero\\storage\\KSS4HE3T\\Iannuzzi et al. - 2025 - Combined accessibility validation and monitoring of web sites and PDF documents.pdf:application/pdf},
}

@article{alghamdi_understanding_2024,
	title = {Understanding developer challenges and trends in web accessibility: a stack overflow analysis},
	copyright = {2024 The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature},
	issn = {1615-5297},
	shorttitle = {Understanding developer challenges and trends in web accessibility},
	url = {https://link.springer.com/article/10.1007/s10209-024-01174-3},
	doi = {10.1007/s10209-024-01174-3},
	abstract = {Many standards and guidelines are available to promote the accessibility of digital products and services, yet developers may still struggle to comprehend how they can be applied. In this study, we investigate Stack Overflow posts in order to comprehend the challenges developers confront in the context of web accessibility. Our analysis involved manually labeling 5,092 posts associated with web accessibility to ensure the credibility and consistency of our results. In addition, a formal open-coding approach was employed to generate a taxonomy that delineates the various aspects developers discuss concerning accessibility in web applications. Our analysis revealed that accessibility posts had increased significantly through the years and that approximately 18.36\% of the accessibility issues were associated with screen reader behavior. Our study also indicates that most discussions are a call to assistance to improve their application accessibility for visual impairments. The analysis of developers’ queries on Stack Overflow reveals several distinct trends. These findings provide a more comprehensive understanding of the challenges that developers face when it comes to web accessibility.},
	language = {en},
	urldate = {2025-04-24},
	journal = {Universal Access in the Information Society},
	author = {Alghamdi, Asmaa Mansour and Aljedaani, Wajdi and Jalali, Hamed and Ludi, Stephanie and Eler, Marcelo M.},
	month = nov,
	year = {2024},
	note = {Company: Springer
Distributor: Springer
Institution: Springer
Label: Springer
Publisher: Springer Berlin Heidelberg},
	pages = {1--17},
	file = {Full Text PDF:C\:\\Users\\alptu\\Zotero\\storage\\CZX3NHPP\\Alghamdi et al. - 2024 - Understanding developer challenges and trends in web accessibility a stack overflow analysis.pdf:application/pdf},
}

@article{abu_doush_web_2023,
	title = {Web accessibility automatic evaluation tools: to what extent can they be automated?},
	volume = {5},
	copyright = {2023 China Computer Federation (CCF)},
	issn = {2524-5228},
	shorttitle = {Web accessibility automatic evaluation tools},
	url = {https://link.springer.com/article/10.1007/s42486-023-00127-8},
	doi = {10.1007/s42486-023-00127-8},
	abstract = {Web accessibility automatic evaluation tools (WAET) are used to evaluate the conformance of the web content to the web content accessibility guidelines (WCAG) success criteria (SC). This paper aims to identify performance criteria that can be used to compare between automatic web accessibility evaluation tools (WAET), determine which SC can be automatically tested based on current technologies, which one requires more advanced technologies, and how can WAET reduce the number of mistakenly reported errors. WCAG 2.1 SC level-A, AA, and AAA are analyzed. The obtained results help in exploring new directions that can lead to more efficient and reliable automatic Web contents assessment as well as development tools. The outcome can help the developers of WAET to increase the number of SC checked in their tools by utilizing cutting-edge technologies. In addition, the presented performance indicators can help to identify how to measure the performance of WAET.},
	language = {en},
	number = {3},
	urldate = {2025-04-24},
	journal = {CCF Transactions on Pervasive Computing and Interaction},
	author = {Abu Doush, Iyad and Sultan, Khalid and Al-Betar, Mohammed Azmi and Almeraj, Zainab and Alyasseri, Zaid Abdi Alkareem and Awadallah, Mohammed A.},
	month = sep,
	year = {2023},
	note = {Company: Springer
Distributor: Springer
Institution: Springer
Label: Springer
Number: 3
Publisher: Springer Nature Singapore},
	pages = {288--320},
	file = {Full Text PDF:C\:\\Users\\alptu\\Zotero\\storage\\MCU85FFX\\Abu Doush et al. - 2023 - Web accessibility automatic evaluation tools to what extent can they be automated.pdf:application/pdf},
}

@inproceedings{sikand_generative_2024,
	address = {Lisbon Portugal},
	title = {Do {Generative} {AI} {Tools} {Ensure} {Green} {Code}? {An} {Investigative} {Study}},
	isbn = {979-8-4007-0572-4},
	shorttitle = {Do {Generative} {AI} {Tools} {Ensure} {Green} {Code}?},
	url = {https://dl.acm.org/doi/10.1145/3643691.3648588},
	doi = {10.1145/3643691.3648588},
	language = {en},
	urldate = {2025-05-08},
	booktitle = {Proceedings of the 2nd {International} {Workshop} on {Responsible} {AI} {Engineering}},
	publisher = {ACM},
	author = {Sikand, Samarth and Mehra, Rohit and Sharma, Vibhu Saujanya and Kaulgud, Vikrant and Podder, Sanjay and Burden, Adam P.},
	month = apr,
	year = {2024},
	pages = {52--55},
	file = {Full Text PDF:C\:\\Users\\alptu\\Zotero\\storage\\IILZD9L8\\Sikand et al. - 2024 - Do Generative AI Tools Ensure Green Code An Investigative Study.pdf:application/pdf},
}

@misc{noauthor_web_nodate,
	title = {Web {Content} {Accessibility} {Guidelines} ({WCAG}) 2.2},
	url = {https://www.w3.org/TR/WCAG22/},
	urldate = {2025-05-08},
	file = {Web Content Accessibility Guidelines (WCAG) 2.2:C\:\\Users\\alptu\\Zotero\\storage\\D7X3IXAA\\WCAG22.html:text/html},
}
